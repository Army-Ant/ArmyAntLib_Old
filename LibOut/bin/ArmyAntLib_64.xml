<?xml version="1.0"?>
<doc>
    <assembly>
        "ArmyAntLib"
    </assembly>
    <members>
        <member name="M:ArmyAnt.Memory.Open(System.UInt32)">
新打开一段指定长度的内存

</member>
        <member name="M:ArmyAnt.Memory.Open(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
打开内存
	  * @ param = "src" : 要打开的内存地址以及长度信息字符串

</member>
        <member name="M:ArmyAnt.StaticStream.op_Inequality(&lt;unknown type&gt;)">
判断流是否不为空

</member>
        <member name="M:ArmyAnt.StaticStream.op_Equality(&lt;unknown type&gt;)">
判断流是否为空

</member>
        <member name="M:ArmyAnt.StaticStream.op_LeftShift(System.Void*)">
将目标字符串内容写入流，该内容遇到0数据（字符串结尾）时停止写入
	  * @ param = "buffer" : 要写入的区域

</member>
        <member name="M:ArmyAnt.StaticStream.op_RightShift(System.Void*)">
将流内容写入指定位置，写入部分为从当前指针处到文件结尾，如果在到达结尾前已经写入的长度达到FILE_SHORT_POS_END，则停止
	  * @ param = "buffer" : 要写入的区域

</member>
        <member name="M:ArmyAnt.StaticStream.IsEmpty">
判断流是否为空

</member>
        <member name="M:ArmyAnt.StaticStream.Write(System.Void*,System.UInt64)">
将数据写入流
	  * @ param = "buffer" : 要写入的数据所在的位置
	  * @ param = "len" : 要写入的长度，不传此参数，则当遇到数据中的0值（字符串结尾）时停止写入
	  * @ return : 写入的实际长度，如果为0，可能发生了错误

</member>
        <member name="M:ArmyAnt.StaticStream.Read(System.Void*,System.Byte,System.UInt64)">
读取流中的数据
	  * @ param = "buffer" : 要将数据保存到的位置
	  * @ param = "endtag" : 读取到此值的字节数据时，停止
	  * @ param = "maxlen" : 要读取的最大长度
	  * @ return : 读取到的实际长度，如果为0，可能发生了错误

</member>
        <member name="M:ArmyAnt.StaticStream.Read(System.Void*,System.UInt32,System.UInt64)">
读取流中的数据
	  * @ param = "buffer" : 要将数据保存到的位置
	  * @ param = "len" : 要读取的最大长度
	  * @ param = "pos" : 要读取的开始位置，不传此参数则从当前位置就地读取
	  * @ return : 读取到的实际长度，如果为0，可能发生了错误

</member>
        <member name="M:ArmyAnt.StaticStream.MovePos(System.UInt64)">
将读写指针移动到指定位置
	  * @ param = "pos" : 从流开头算起，要移动到的位置。此参数默认值为移动到流尾部

</member>
        <member name="M:ArmyAnt.StaticStream.IsEndPos">
读写指针是否已到流末尾

</member>
        <member name="M:ArmyAnt.StaticStream.GetPos">
检查当前读写指针的位置

</member>
        <member name="M:ArmyAnt.StaticStream.GetLength">
检查流的长度

</member>
        <member name="T:ArmyAnt.StaticStream">
静态流，表示对已存在的数据的读写流，包括磁盘文件，内存等等，这种流具有如下特点：
		读取不分同步和异步，不需要监听读取
		读与写使用同一个流缓存，同一个位置指针
		可以在原有数据的任意处插写入数据

</member>
        <member name="M:ArmyAnt.IStream.Create(&lt;unknown type&gt;,System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
根据流的类型和其对应的src字符串创建相应的流，需要手动释放内存

</member>
        <member name="M:ArmyAnt.IStream.Create(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
根据url创建流，需要手动释放内存。
		url由约定俗成的格式组成，具体规则如下：
		file:// 开头，代表磁盘文件，后跟文件路径
		memory:// 开头，代表内存，后跟内存src字符串
		

</member>
        <member name="M:ArmyAnt.IStream.GetType">
检验当前流的类型
	  * @ return : 返回流的类型

</member>
        <member name="M:ArmyAnt.IStream.IsStatic">
判断流是否为静态，静态流代表文件、内存这一类数据存储器；非静态流则是网络、管道等一些实时传输的数据通信流
	  * @ return : 静态返回true，非静态返回false

</member>
        <member name="M:ArmyAnt.IStream.GetSourceName">
获取流源的名称，即调用Open时输入的字符串参数
	  * @ return : 流源的名称

</member>
        <member name="M:ArmyAnt.IStream.IsOpened(System.Boolean)">
检验流是否打开中
	  * @ param = "dynamicCheck" : 是否进行实时检查，当该参数为默认或者true时，在非联网状态下，将尝试读取流，联网状态下，将尝试ping目标地址

</member>
        <member name="M:ArmyAnt.IStream.Close">
关闭流

</member>
        <member name="M:ArmyAnt.IStream.Open(System.SByte!System.Runtime.CompilerServices.IsSignUnspecifiedByte!System.Runtime.CompilerServices.IsConst*)">
按名称字符串打开流， 不同的流有不同的字符串格式要求 

</member>
    </members>
</doc>