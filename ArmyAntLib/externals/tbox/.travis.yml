sudo: required
language: C
os:
  - linux
  - osx

install:
  - git clone --branch=master https://github.com/waruqi/xmake.git waruqi/xmake
  - cd ./waruqi/xmake
  - sudo ./install
  - cd -
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      git clone https://github.com/linux-test-project/lcov.git;
      sudo make -C ./lcov install;
      gem install coveralls-lcov;
    fi

script:
  - xmake 
  - xmake r demo
  - xmake f -m debug
  - xmake -j 4
  - xmake r demo
  - xmake p
  - xmake c
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      xmake f -m profile;
      xmake -r -j 4;
      xmake f -m coverage;
      xmake -r -j 4;
      echo "testing stream ..";
      xmake r demo stream http://tboox.net /tmp/a > ./error.txt;
      xmake r demo stream_async_stream http://www.tboox.org /tmp/a > ./error.txt;
      echo "testing regex ..";
      xmake r demo regex > ./error.txt;
      echo "testing network ..";
      xmake r demo network_url > ./error.txt;
      xmake r demo network_cookies > ./error.txt;
      echo "testing libm ..";
      xmake r demo libm_float > ./error.txt;
      xmake r demo libm_double > ./error.txt;
      echo "testing math ..";
      xmake r demo math_fixed > ./error.txt;
      echo "testing libc ..";
      xmake r demo libc_time > ./error.txt;
      xmake r demo libc_wchar > ./error.txt;
      xmake r demo libc_stdlib > ./error.txt;
      xmake r demo libc_string > ./error.txt;
      echo "testing algorithm ..";
      xmake r demo algorithm_find > ./error.txt;
      xmake r demo algorithm_sort > ./error.txt;
      echo "testing container ..";
      xmake r demo container_list > ./error.txt;
      xmake r demo container_heap > ./error.txt;
      xmake r demo container_queue > ./error.txt;
      xmake r demo container_vector > ./error.txt;
      xmake r demo container_hash_map > ./error.txt;
      echo "testing object ..";
      xmake r demo object_dump ./res/object.xml > ./error.txt;
      xmake r demo object_dump ./res/object.bin > ./error.txt;
      xmake r demo object_dump ./res/object.json > ./error.txt;
      xmake r demo object_dump ./res/object.bplist > ./error.txt;
      xmake r demo object_dump ./res/object.xplist > ./error.txt;
      echo "testing database ..";
      xmake r demo database_sql /tmp/sqlite3.db > ./error.txt;
      echo "testing utils ..";
      xmake r demo utils_dump /tmp/sqlite3.db > ./error.txt;
      xmake r demo utils_crc hello > ./error.txt;
      xmake r demo utils_md5 hello > ./error.txt;
      xmake r demo utils_sha hello > ./error.txt;
      xmake r demo utils_bits > ./error.txt;
      echo "testing platform ..";
      xmake r demo platform_ifaddrs > ./error.txt;
      xmake r demo platform_hostname > ./error.txt;
      xmake r demo platform_backtrace > ./error.txt;
      xmake r demo platform_thread_pool > ./error.txt;
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      xmake f -p iphoneos;
      xmake;
      xmake f -m debug;
      xmake -r -j 4;
      xmake p -a "armv7,armv7s,arm64";
      xmake f -p iphonesimulator;
      xmake -r -j 4;
      xmake f -m debug;
      xmake -j 4; 
    fi

after_success:
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info 'src/demo/*' '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info;
    fi

after_failure:
  - cat ./error.txt
