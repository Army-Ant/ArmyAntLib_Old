/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class ArmyAnt_Java_AAFile */

#ifndef _Included_ArmyAnt_Java_AAFile_2016_2_23
#define _Included_ArmyAnt_Java_AAFile_2016_2_23
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_Create
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1Create
  (JNIEnv *, jclass);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_Release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_ArmyAnt_Java_1AAFile_Native_1Release
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_SetMode
 * Signature: (JZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1SetMode
  (JNIEnv *, jclass, jlong stream, jboolean nocreate, jboolean noexist);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenFile
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenFile
  (JNIEnv *, jclass, jlong stream, jstring filename);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenMemoryByAddr
 * Signature: (JJI)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenMemoryByAddr
  (JNIEnv *, jclass, jlong stream, jlong memaddr, jint len);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenNamePipe
 * Signature: (JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenNamePipe
  (JNIEnv *, jclass, jlong stream, jstring pipename, jstring pipepath, jstring pipeserver);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenCom
 * Signature: (JS)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenCom
  (JNIEnv *, jclass, jlong stream, jshort comNum);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenNetWithName
 * Signature: (JLjava/lang/String;S)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenNetWithName
  (JNIEnv *, jclass, jlong stream, jstring netAddr, jshort protocol);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_OpenNetWithAddr
 * Signature: (JJIS)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1OpenNetWithAddr
  (JNIEnv *, jclass, jlong stream, jlong netIp, jint port, jshort protocol);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_Close
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1Close
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_IsOpened
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1IsOpened
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_NowType
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1NowType
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_GetLength
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1GetLength
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_GetPos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1GetPos
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_IsEndPos
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1IsEndPos
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_MovePos
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1MovePos
  (JNIEnv *, jclass, jlong stream, jlong pos);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_GetStreamName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_ArmyAnt_Java_1AAFile_Native_1GetStreamName
  (JNIEnv *, jclass, jlong stream);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_ReadSome
 * Signature: (J[BJ)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1ReadSome
  (JNIEnv *, jclass, jlong stream, jbyteArray buffer, jlong pos, jlong len);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_ReadTo
 * Signature: (J[BS)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1ReadTo
  (JNIEnv *, jclass, jlong stream, jbyteArray buffer, jshort endtag, jlong maxlen);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_Write
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_ArmyAnt_Java_1AAFile_Native_1Write
  (JNIEnv *, jclass, jlong stream, jbyteArray buffer, jlong len);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_CopyFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1CopyFile
  (JNIEnv *, jclass, jstring srcPath, jstring dstPath);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_MoveOrRenameFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1MoveOrRenameFile
  (JNIEnv *, jclass, jstring srcPath, jstring dstPath);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_DeleteFile
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1DeleteFile
  (JNIEnv *, jclass, jstring path);

/*
 * Class:     ArmyAnt_Java_AAFile
 * Method:    Native_IsFileExist
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_ArmyAnt_Java_1AAFile_Native_1IsFileExist
  (JNIEnv *, jclass, jstring path);

#ifdef __cplusplus
} // extern "C"
#endif
#endif // _Included_ArmyAnt_Java_AAFile_2016_2_23
